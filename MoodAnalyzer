public class MoodAnalyzer {

    public String analyzeMood(String message) throws MoodAnalyzerException {

        try {
            if (message.contains(("Sad")))
                return "SAD";
            else
                return "HAPPY";

        }catch (NullPointerException e){
            throw new MoodAnalyzerException("Please Enter Valid Message.");
        }

    }
}


------------------------------------------------------------------------------------------------------------------------------------------
import org.hamcrest.CoreMatchers;
import org.junit.Assert;
import org.junit.Test;
import org.junit.rules.ExpectedException;


public class MoodAnalyzerTest {

    @Test
    public void testMoodAnalysis(){                                                            //To get SAD

        MoodAnalyzer moodAnalyzer = new MoodAnalyzer();

        String mood = null;
        try {
            mood = moodAnalyzer.analyzeMood("This is a Sad message");
        } catch (MoodAnalyzerException e) {
            e.printStackTrace();
        }

        Assert.assertEquals("SAD",mood);

    }

    @Test
    public void testMoodAnalysis1(){                                                        //To get HAPPY

        MoodAnalyzer moodAnalyzer = new MoodAnalyzer();

        String mood = null;
        try {
            mood = moodAnalyzer.analyzeMood("This is a Happy message");
        } catch (MoodAnalyzerException e) {
            e.printStackTrace();
        }

        Assert.assertEquals("HAPPY",mood);

    }

    @Test
    public void testMoodAnalysis2(){                                                         //Null Pointer Exception //Provides proper message if message is invalid

        MoodAnalyzer moodAnalyzer = new MoodAnalyzer();

        String mood = null;
        try {
            ExpectedException exceptionRule = ExpectedException.none();
            exceptionRule.expect(MoodAnalyzerException.class);
            mood = moodAnalyzer.analyzeMood(null);
            Assert.assertEquals("HAPPY",mood);
        } catch (MoodAnalyzerException e) {
            e.printStackTrace();
        }


    }


}
------------------------------------------------------------------------------------------

public class MoodAnalyzerException extends Exception {                                                                    //MoodAnalyzerException class with constructor

    public MoodAnalyzerException(String message) {
        super(message);
    }
}



------------------------------------------------------------------------------------------

plugins {                                               
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
// https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.13.1'                                 //Gradle Dependency for Junit.

}
